import json
import os
import pandas as pd

index = pd.MultiIndex.from_tuples([('scenario', 'starttime'),
                                   ('scenario', 'timestep'),
                                   ('scenario', 'sim_duration'),
                                   ('scenario', 'prj_duration'),
                                   ('scenario', 'strategy'),
                                   ('scenario', 'ph_len'),
                                   ('scenario', 'ch_len'),
                                   ('scenario', 'wacc'),
                                   ('scenario', 'currency'),
                                   ('scenario', 'latitude'),
                                   ('scenario', 'longitude'),
                                   ('scenario', 'blocks'),
                                   ('core', 'dcac_size'),
                                   ('core', 'acdc_size'),
                                   ('core', 'capex_spec'),
                                   ('core', 'mntex_spec'),
                                   ('core', 'opex_spec'),
                                   ('core', 'ls'),
                                   ('core', 'cdc'),
                                   ('core', 'dcac_eff'),
                                   ('core', 'acdc_eff'),
                                   ('dem', 'filename'),
                                   ('wind', 'size'),
                                   ('wind', 'filename'),
                                   ('wind', 'capex_spec'),
                                   ('wind', 'mntex_spec'),
                                   ('wind', 'opex_spec'),
                                   ('wind', 'ls'),
                                   ('wind', 'cdc'),
                                   ('wind', 'eff'),
                                   ('pv', 'size'),
                                   ('pv', 'data_source'),
                                   ('pv', 'filename'),
                                   ('pv', 'capex_spec'),
                                   ('pv', 'mntex_spec'),
                                   ('pv', 'opex_spec'),
                                   ('pv', 'ls'),
                                   ('pv', 'cdc'),
                                   ('pv', 'eff'),
                                   ('gen', 'size'),
                                   ('gen', 'capex_spec'),
                                   ('gen', 'mntex_spec'),
                                   ('gen', 'opex_spec'),
                                   ('gen', 'ls'),
                                   ('gen', 'cdc'),
                                   ('gen', 'eff'),
                                   ('grid', 'size'),
                                   ('grid', 'mg2g'),
                                   ('grid', 'capex_spec'),
                                   ('grid', 'mntex_spec'),
                                   ('grid', 'opex_spec_g2mg'),
                                   ('grid', 'opex_spec_mg2g'),
                                   ('grid', 'ls'),
                                   ('grid', 'cdc'),
                                   ('grid', 'eff'),
                                   ('ess', 'size'),
                                   ('ess', 'aging'),
                                   ('ess', 'chemistry'),
                                   ('ess', 'temp_battery'),
                                   ('ess', 'capex_spec'),
                                   ('ess', 'mntex_spec'),
                                   ('ess', 'opex_spec'),
                                   ('ess', 'ls'),
                                   ('ess', 'cdc'),
                                   ('ess', 'chg_eff'),
                                   ('ess', 'dis_eff'),
                                   ('ess', 'chg_crate'),
                                   ('ess', 'dis_crate'),
                                   ('ess', 'init_soc'),
                                   ('ess', 'sdr'),
                                   ('ess', 'cdc'),
                                   ('ess', 'eff'),
                                   ('bev', 'size'),
                                   ('bev', 'aging'),
                                   ('bev', 'chemistry'),
                                   ('bev', 'temp_battery'),
                                   ('bev', 'rex_cs'),
                                   ('bev', 'int_lvl'),
                                   ('bev', 'system'),
                                   ('bev', 'filename'),
                                   ('bev', 'num'),
                                   ('bev', 'daily_mean'),
                                   ('bev', 'daily_stdev'),
                                   ('bev', 'dep_mean1'),
                                   ('bev', 'dep_stdev1'),
                                   ('bev', 'dep_mean2'),
                                   ('bev', 'dep_stdev2'),
                                   ('bev', 'dist_mean'),
                                   ('bev', 'dist_stdev'),
                                   ('bev', 'idle_mean'),
                                   ('bev', 'idle_stdev'),
                                   ('bev', 'patience'),
                                   ('bev', 'rex_patience'),
                                   ('bev', 'consumption'),
                                   ('bev', 'speed_avg'),
                                   ('bev', 'soc_min_return'),
                                   ('bev', 'soc_dep'),
                                   ('bev', 'capex_spec'),
                                   ('bev', 'mntex_spec'),
                                   ('bev', 'opex_spec'),
                                   ('bev', 'sys_chg_soe'),
                                   ('bev', 'sys_dis_soe'),
                                   ('bev', 'ls'),
                                   ('bev', 'init_soc'),
                                   ('bev', 'chg_pwr'),
                                   ('bev', 'dis_pwr'),
                                   ('bev', 'eff'),
                                   ('bev', 'chg_eff'),
                                   ('bev', 'dis_eff'),
                                   ('bev', 'cdc'),
                                   ('bev', 'ext_ac_costs'),
                                   ('bev', 'ext_ac_power'),
                                   ('bev', 'ext_dc_costs'),
                                   ('bev', 'ext_dc_power'),
                                   ('brs', 'size'),
                                   ('brs', 'aging'),
                                   ('brs', 'chemistry'),
                                   ('brs', 'temp_battery'),
                                   ('brs', 'int_lvl'),
                                   ('brs', 'system'),
                                   ('brs', 'filename'),
                                   ('brs', 'num'),
                                   ('brs', 'daily_mean'),
                                   ('brs', 'daily_stdev'),
                                   ('brs', 'idle_mean'),
                                   ('brs', 'idle_stdev'),
                                   ('brs', 'patience'),
                                   ('brs', 'soc_return_mean'),
                                   ('brs', 'soc_return_stdev'),
                                   ('brs', 'soc_dep'),
                                   ('brs', 'capex_spec'),
                                   ('brs', 'mntex_spec'),
                                   ('brs', 'opex_spec'),
                                   ('brs', 'sys_chg_soe'),
                                   ('brs', 'sys_dis_soe'),
                                   ('brs', 'ls'),
                                   ('brs', 'init_soc'),
                                   ('brs', 'chg_pwr'),
                                   ('brs', 'dis_pwr'),
                                   ('brs', 'eff'),
                                   ('brs', 'chg_eff'),
                                   ('brs', 'dis_eff'),
                                   ('brs', 'cdc'),
                                   ('brs', 'ext_ac_costs'),
                                   ('brs', 'ext_ac_power'),
                                   ('brs', 'ext_dc_costs'),
                                   ('brs', 'ext_dc_power')])


data = {'sizing': ['1/1/2018', '15T', 365, 25, 'go', 48, 24, 0.09, 'USD', 48.2652, 11.6686,
                   dict(core='SystemCore',
                        dem='FixedDemand',
                        pv='PVSource',
                        wind='WindSource',
                        ess='StationaryEnergyStorage',
                        gen='ControllableSource',
                        grid='GridConnection',
                        bev='VehicleCommoditySystem',
                        brs='BatteryCommoditySystem'),  # scenario
                    'opt', 1.00E+05, 0.08, 0.0024, 0, 20, 1, 0.95, 0.95,  # core
                    'dem_example',  # dem
                    'opt', 'wind_example', 2.8, 0.084, 0, 20, 1, 0.95,  # wind
                    'opt', 'PVGIS API', 'pv_example', 0.503, 0.01509, 0, 25, 1, 0.95,  # pv
                    'opt', 0.261, 0.02088, 0.00065, 10, 1, 1,  # gen
                    'opt', True, 15, 0, 'grid_buy_example', 'grid_sell_example', 10, 1, 1,  # grid
                    'opt', True, 'lfp', 'pv', 0.25, 0.00625, 0, 10, 1, 0.9, 0.9, 0.8, 0.8, 0.5, 0, 1, 1,  # ess
                    3.00E+04, True, 'nmc', 'pv', None, 'v2mg', 'AC', 'run_des', 5, 7, 2, 8, 2, 17, 2, 50, 30, 1.5, 0.5, 2, 1, 300, 25, 0.05, 1, 0, 0, 0, -0.0003, 0.00035, 10, 0.5, 11000, 11000, 1, 0.95, 0.95, 1, -3e-5, 0, 8e-4, 0,  # bev
                    3.00E+03, True, 'nmc', 'pv', 'cc', 'AC', 'run_des', 10, 6, 1, 1.5, 0.5, 1, 0.12, 0.1, 1, 0, 0, 0, -0.0003, 0.00035, 10, 0.5, 1500, 1500, 1, 0.95, 0.95, 1, -3e-5, 0, 8e-4, 0],  # brs
        }

df = pd.DataFrame.from_dict(data)
df.index = index
df.reset_index(inplace=True, names=['block', 'key'])  # this saves the multiindex into a column to make the index unique for json

file_path = os.path.join(os.getcwd(), 'example.json')
scenarios = df.to_json(file_path, orient='records', lines=True)

print(f'{file_path} created')
